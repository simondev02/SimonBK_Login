basePath: /Vehicle
definitions:
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.ResourceResponse:
    properties:
      actions:
        additionalProperties: true
        type: object
      resourceName:
        type: string
    type: object
  swagger.LoginResponse:
    properties:
      accessToken:
        type: string
      id_company:
        type: integer
      id_customer:
        type: integer
      id_username:
        type: integer
      message:
        type: string
      name:
        type: string
      permission:
        items:
          $ref: '#/definitions/swagger.PermissionResponse'
        type: array
      refreshToken:
        type: string
    type: object
  swagger.PermissionResponse:
    properties:
      delete:
        type: boolean
      fk_module:
        type: integer
      fk_role:
        type: integer
      fk_username:
        type: integer
      id:
        type: integer
      read:
        type: boolean
      update:
        type: boolean
      write:
        type: boolean
    type: object
  swagger.RefreshTokenInput:
    properties:
      refreshToken:
        type: string
    type: object
  swagger.accessTokenResponse:
    properties:
      accessToken:
        example: tu_nuevo_token_de_acceso_ejemplo
        type: string
    type: object
host: localhost:60030
info:
  contact: {}
  description: Esta es mi API
  title: Mi API
  version: "1"
paths:
  /users/login/:
    post:
      consumes:
      - application/json
      description: Autentica a un usuario y devuelve un token de acceso y un token
        de refresco
      parameters:
      - description: Credenciales del usuario
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa con tokens y detalles del usuario
          schema:
            $ref: '#/definitions/swagger.LoginResponse'
        "400":
          description: 'Error: Datos inválidos'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'Error: Usuario o contraseña incorrectos'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Iniciar sesión
  /users/refresh:
    post:
      consumes:
      - application/json
      description: Refresca un token de acceso utilizando un token de refresco válido
      parameters:
      - description: Token de refresco
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/swagger.RefreshTokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa con un nuevo token de acceso
          schema:
            $ref: '#/definitions/swagger.accessTokenResponse'
        "400":
          description: 'Error: Datos inválidos'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'Error: Token inválido o expirado'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error interno del servidor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refrescar el token de acceso
  /users/resources/{roleid}:
    get:
      consumes:
      - application/json
      description: Retrieve resources associated with a specific role ID
      parameters:
      - description: Role ID
        in: path
        name: roleid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved resources
          schema:
            items:
              $ref: '#/definitions/models.ResourceResponse'
            type: array
        "400":
          description: Invalid role ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error fetching resources
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get resources by role ID
      tags:
      - resources
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
